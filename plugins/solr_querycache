#!/usr/bin/python
# Copyright (c) 2011
# Distilled Media Ltd.  All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice,
#    this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
# 3. Neither the name of the author nor the names of any contributors to the
#    software may be used to endorse or promote products derived from this
#    software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

import httplib, sys, re
from lxml import etree
import os,re

hostport  = 'localhost:8080'
try:
	if os.environ['hostport']:
		hostport = os.environ['hostport']
except:
	pass

cores = ['__SINGLE_CORE__']
try:
	if os.environ['cores']:
		cores = re.split(r'\s+', os.environ['cores'])
except:
	pass

if sys.argv[-1] == 'config':
	print "graph_title Solr Cache / Query Result Cache"
	print "graph_args -l 0"
	print "graph_category search"
	print "graph_vlabel size"
	for core in cores:
                if core == '__SINGLE_CORE__':
                        core = ''
		print "%s_size.label %s Size"% (core,core)
		print "%s_size.draw AREA"% core
		print "%s_lookups.label %s Lookups"% (core,core)
		print "%s_lookups.draw STACK"% core
		print "%s_hits.label %s Hits"% (core,core)
		print "%s_hits.draw STACK"% core
		print "%s_inserts.label %s Inserts"% (core,core)
		print "%s_inserts.draw STACK"% core
		print "%s_evictions.label %s Evictions"% (core,core)
		print "%s_evictions.draw STACK"% core

else:
	conn = httplib.HTTPConnection( hostport )
	for core in cores:
	        if core == '__SINGLE_CORE__':
                        core = coredir = '' 
                else:
                	coredir = "/%s" % core
                path = "/solr%s/admin/stats.jsp" % coredir
		conn.request("GET", path)
		res = conn.getresponse()
		
		if res.status == 200:
			data = res.read()
		
			root = etree.fromstring(data)
			elements = root.xpath('/solr/solr-info/CACHE')
		
			stat_list = []
		
			for entry in elements[0].xpath('entry'):
				if entry[0].text.strip() == 'queryResultCache':
					description = entry.xpath('description')
					match = re.findall(r'maxSize=([0-9]+)', description[0].text.strip())
					maxsize = match[0]
					stats = entry.xpath('stats')
					for stat in stats[0]:
						if stat.get('name') in ['lookups', 'hits', 'inserts', 'evictions', 'size']:
							stat_list.append("%s_%s.value %s" % (core, stat.get('name'), stat.text.strip()))
		
			for i in stat_list:
				print i
