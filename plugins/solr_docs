#!/usr/bin/python
# Copyright (c) 2011
# Distilled Media Ltd.  All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice,
#    this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
# 3. Neither the name of the author nor the names of any contributors to the
#    software may be used to endorse or promote products derived from this
#    software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

#
# Multi Core
# Monitors the number of documents on the core.
#

import httplib, sys
from lxml import etree
import os,re
import traceback

DEBUG = os.getenv("DEBUG")
if DEBUG: DEBUG = int(DEBUG)

hostport = 'localhost:8080'
if os.getenv("hostport"):
        hostport = os.getenv("hostport")

contextpath = '/solr'
if os.getenv("contextpath"):
        contextpath = os.getenv("contextpath")

cores = ['__SINGLE_CORE__']
if os.getenv('cores'):
        cores = re.split(r'\s+', os.getenv('cores'))

delimiter='_'
if os.getenv('delimiter'):
        delimiter =  os.getenv("delimiter")
if re.match(r'\w', delimiter) :
        delimiter = '(?<='+delimiter+')'
p = re.compile( 'solr_\w+'+delimiter )
filename = os.path.basename(__file__)
core = p.sub('', filename)
if core and core != filename:
       	cores = [ core ]
if DEBUG >= 1: print cores

try:
	if sys.argv[-1] == 'config':
		print "graph_title Solr Docs (%s)" % contextpath
		print "graph_vlabel docs"
		print "graph_category search"
		for core in cores:
	                if core == '__SINGLE_CORE__':
	                        core = ''
			print "%s_docs.label %s Docs" % (core, core)
	else:
		conn = httplib.HTTPConnection( hostport )
		for core in cores:
	                if core == '__SINGLE_CORE__':
	                        core = coredir = '' 
	                else:
	                	coredir = "/%s" % core
	                path = "%s%s/admin/mbeans?stats=true" % (contextpath, coredir)
			conn.request("GET", path)
			res = conn.getresponse()
	
			if res.status == 200:
				data = res.read()
	                        if DEBUG >= 3: print data

				root = etree.fromstring(data)

				xmlpash  = '/response'
				xmlpash += '/lst[@name="solr-mbeans"]'
				xmlpash += '/lst[@name="CORE"]'
				xmlpash += '/lst[@name="searcher"]'
				xmlpash += '/lst[@name="stats"]'
				xmlpash += '/int[@name="numDocs"]'

				numdocs = root.xpath(xmlpash)[0]
				print "%s_docs.value %s" % (core, numdocs.text)

except:
	if DEBUG: traceback.print_exc()
